var PixelDrawr;
(function(w){var x=function(){function c(a){if(!a)throw Error("No settings object given to PixelDrawr.");if("undefined"===typeof a.PixelRender)throw Error("No PixelRender given to PixelDrawr.");if("undefined"===typeof a.MapScreener)throw Error("No MapScreener given to PixelDrawr.");if("undefined"===typeof a.createCanvas)throw Error("No createCanvas given to PixelDrawr.");this.PixelRender=a.PixelRender;this.MapScreener=a.MapScreener;this.createCanvas=a.createCanvas;this.unitsize=a.unitsize||1;this.noRefill=
a.noRefill;this.spriteCacheCutoff=a.spriteCacheCutoff||0;this.groupNames=a.groupNames;this.framerateSkip=a.framerateSkip||1;this.framesDrawn=0;this.epsilon=a.epsilon||.007;this.keyWidth=a.keyWidth||"width";this.keyHeight=a.keyHeight||"height";this.keyTop=a.keyTop||"top";this.keyRight=a.keyRight||"right";this.keyBottom=a.keyBottom||"bottom";this.keyLeft=a.keyLeft||"left";this.keyOffsetX=a.keyOffsetX;this.keyOffsetY=a.keyOffsetY;this.generateObjectKey=a.generateObjectKey||function(a){return a.toString()};
this.resetBackground()}c.prototype.getFramerateSkip=function(){return this.framerateSkip};c.prototype.getThingArray=function(){return this.thingArrays};c.prototype.getCanvas=function(){return this.canvas};c.prototype.getContext=function(){return this.context};c.prototype.getBackgroundCanvas=function(){return this.backgroundCanvas};c.prototype.getBackgroundContext=function(){return this.backgroundContext};c.prototype.getNoRefill=function(){return this.noRefill};c.prototype.getEpsilon=function(){return this.epsilon};
c.prototype.setFramerateSkip=function(a){this.framerateSkip=a};c.prototype.setThingArrays=function(a){this.thingArrays=a};c.prototype.setCanvas=function(a){this.canvas=a;this.context=a.getContext("2d")};c.prototype.setNoRefill=function(a){this.noRefill=a};c.prototype.setEpsilon=function(a){this.epsilon=a};c.prototype.resetBackground=function(){this.backgroundCanvas=this.createCanvas(this.MapScreener[this.keyWidth],this.MapScreener[this.keyHeight]);this.backgroundContext=this.backgroundCanvas.getContext("2d")};
c.prototype.setBackground=function(a){this.backgroundContext.fillStyle=a;this.backgroundContext.fillRect(0,0,this.MapScreener[this.keyWidth],this.MapScreener[this.keyHeight])};c.prototype.drawBackground=function(){this.context.drawImage(this.backgroundCanvas,0,0)};c.prototype.setThingSprite=function(a){a.hidden||(a.sprite=this.PixelRender.decode(this.generateObjectKey(a),a),a.sprite.constructor===PixelRendr.SpriteMultiple?(a.numSprites=0,this.refillThingCanvasMultiple(a)):(a.numSprites=1,this.refillThingCanvasSingle(a)))};
c.prototype.refillGlobalCanvas=function(){this.framesDrawn+=1;if(0===this.framesDrawn%this.framerateSkip){this.noRefill||this.drawBackground();for(var a=0;a<this.thingArrays.length;a+=1)this.refillThingArray(this.thingArrays[a])}};c.prototype.refillThingArray=function(a){for(var b=0;b<a.length;b+=1)this.drawThingOnContext(this.context,a[b])};c.prototype.drawThingOnContext=function(a,b){b.hidden||b.opacity<this.epsilon||1>b[this.keyHeight]||1>b[this.keyWidth]||this.getTop(b)>this.MapScreener[this.keyHeight]||
0>this.getRight(b)||0>this.getBottom(b)||this.getLeft(b)>this.MapScreener[this.keyWidth]||("undefined"===typeof b.numSprites&&this.setThingSprite(b),0<b.canvas[this.keyWidth]?this.drawThingOnContextSingle(a,b.canvas,b,this.getLeft(b),this.getTop(b)):this.drawThingOnContextMultiple(a,b.canvases,b,this.getLeft(b),this.getTop(b)))};c.prototype.refillThingCanvasSingle=function(a){if(!(1>a[this.keyWidth]||1>a[this.keyHeight])){var b=a.canvas,d=a.context,b=d.getImageData(0,0,b[this.keyWidth],b[this.keyHeight]);
this.PixelRender.memcpyU8(a.sprite,b.data);d.putImageData(b,0,0)}};c.prototype.refillThingCanvasMultiple=function(a){if(!(1>a[this.keyWidth]||1>a[this.keyHeight])){var b=a.sprite,d=a.canvases={direction:b.direction,multiple:!0},c,e,f,g;a.numSprites=1;for(g in b.sprites)b.sprites.hasOwnProperty(g)&&(c=this.createCanvas(a.spritewidth*this.unitsize,a.spriteheight*this.unitsize),e=c.getContext("2d"),f=e.getImageData(0,0,c[this.keyWidth],c[this.keyHeight]),this.PixelRender.memcpyU8(b.sprites[g],f.data),
e.putImageData(f,0,0),d[g]={canvas:c,context:e},a.numSprites+=1);a[this.keyWidth]*a[this.keyHeight]<this.spriteCacheCutoff?(a.canvas[this.keyWidth]=a[this.keyWidth]*this.unitsize,a.canvas[this.keyHeight]=a[this.keyHeight]*this.unitsize,this.drawThingOnContextMultiple(a.context,a.canvases,a,0,0)):a.canvas[this.keyWidth]=a.canvas[this.keyHeight]=0}};c.prototype.drawThingOnContextSingle=function(a,b,d,c,e){d.repeat?this.drawPatternOnContext(a,b,c,e,d.unitwidth,d.unitheight,d.opacity||1):1!==d.opacity?
(a.globalAlpha=d.opacity,a.drawImage(b,c,e,b.width*d.scale,b.height*d.scale),a.globalAlpha=1):a.drawImage(b,c,e,b.width*d.scale,b.height*d.scale)};c.prototype.drawThingOnContextMultiple=function(a,b,d,c,e){var f=d.sprite,g=e,l=c;c+=d.unitwidth;e+=d.unitheight;var m=d.unitwidth,n=d.unitheight,t=d.spritewidthpixels,u=d.spriteheightpixels,q=Math.min(m,t),r=Math.min(n,u);d=d.opacity;var k,h,p;switch(b.direction){case "vertical":if(p=b[this.keyBottom])h=f.bottomheight?f.bottomheight*this.unitsize:u,this.drawPatternOnContext(a,
p.canvas,l,e-h,m,r,d),e-=h,n-=h;if(p=b[this.keyTop])h=f.topheight?f.topheight*this.unitsize:u,this.drawPatternOnContext(a,p.canvas,l,g,m,r,d),g+=h,n-=h;break;case "horizontal":if(p=b[this.keyLeft])k=f.leftwidth?f.leftwidth*this.unitsize:t,this.drawPatternOnContext(a,p.canvas,l,g,q,n,d),l+=k,m-=k;if(p=b[this.keyRight])k=f.rightwidth?f.rightwidth*this.unitsize:t,this.drawPatternOnContext(a,p.canvas,c-k,g,q,n,d),c-=k,m-=k;break;case "corners":h=f.topheight?f.topheight*this.unitsize:u;k=f.leftwidth?f.leftwidth*
this.unitsize:t;this.drawPatternOnContext(a,b.topLeft.canvas,l,g,q,r,d);this.drawPatternOnContext(a,b[this.keyLeft].canvas,l,g+h,q,n-2*h,d);this.drawPatternOnContext(a,b.bottomLeft.canvas,l,e-h,q,r,d);l+=k;m-=k;k=f.rightwidth?f.rightwidth*this.unitsize:t;this.drawPatternOnContext(a,b[this.keyTop].canvas,l,g,m-k,r,d);this.drawPatternOnContext(a,b.topRight.canvas,c-k,g,q,r,d);g+=h;n-=h;h=f.bottomheight?f.bottomheight*this.unitsize:u;this.drawPatternOnContext(a,b[this.keyRight].canvas,c-k,g,q,n-h,d);
this.drawPatternOnContext(a,b.bottomRight.canvas,c-k,e-h,q,r,d);this.drawPatternOnContext(a,b[this.keyBottom].canvas,l,e-h,m-k,r,d);c-=k;m-=k;e-=h;n-=h;break;default:throw Error("Unknown or missing direction given in SpriteMultiple.");}(p=b.middle)&&g<e&&l<c&&(f.middleStretch?(a.globalAlpha=d,a.drawImage(p.canvas,l,g,m,n),a.globalAlpha=1):this.drawPatternOnContext(a,p.canvas,l,g,m,n,d))};c.prototype.getTop=function(a){return this.keyOffsetY?a[this.keyTop]+a[this.keyOffsetY]:a[this.keyTop]};c.prototype.getRight=
function(a){return this.keyOffsetX?a[this.keyRight]+a[this.keyOffsetX]:a[this.keyRight]};c.prototype.getBottom=function(a){return this.keyOffsetX?a[this.keyBottom]+a[this.keyOffsetY]:a[this.keyBottom]};c.prototype.getLeft=function(a){return this.keyOffsetX?a[this.keyLeft]+a[this.keyOffsetX]:a[this.keyLeft]};c.prototype.drawPatternOnContext=function(a,b,c,v,e,f,g){a.globalAlpha=g;a.translate(c,v);a.fillStyle=a.createPattern(b,"repeat");a.fillRect(0,0,e,f);a.translate(-c,-v);a.globalAlpha=1};return c}();
w.PixelDrawr=x})(PixelDrawr||(PixelDrawr={}));